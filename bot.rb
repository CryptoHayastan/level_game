require 'telegram/bot'
require_relative 'config/environment'
require 'rufus-scheduler'

TOKEN = ENV['TELEGRAM_BOT_TOKEN']
CHANNEL = '@KukuruznikTM'
CHAT_ID = -1002291429008

def find_or_update_user(update)
  return unless update.respond_to?(:from) && update.from

  user_id = update.from.id
  username = update.from.username || ''
  first_name = update.from.first_name || ''
  last_name = update.from.last_name || ''

  chat_id =
    if update.respond_to?(:chat) && update.chat&.title && update.chat&.id
      update.chat.id
    elsif update.respond_to?(:message) && update.message&.chat&.id
      update.message.chat.id
    end

  user = User.find_or_initialize_by(telegram_id: user_id)
  user.username = username
  user.first_name = first_name
  user.last_name = last_name
  user.role ||= 'user'
  user.step ||= 'start'
  user.ban ||= false
  user.referral_link ||= "https://t.me/Kukuruznik_profile_bot?start=#{user.telegram_id}"
  user.balance ||= 0
  user.save!

  user
end

def admin_user?(bot, chat_id, user_id)
  begin
    admins = bot.api.getChatAdministrators(chat_id: chat_id)

    is_admin = admins.any? { |admin| admin.user.id.to_i == user_id.to_i }

    if is_admin
      user = User.find_by(telegram_id: user_id)
      if user && user.role != 'admin'
        if user.role != 'superadmin'
          user.update(role: 'admin')
        end
      end
    end

    is_admin
  rescue => e
    puts "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∞: #{e.message}"
    false
  end
end

def safe_telegram_name(u)
  if u.first_name.present? || u.last_name.present?
    [
      u.first_name&.gsub('_', '\\_'),
      u.last_name&.gsub('_', '\\_')
    ].compact.join(' ')
  elsif u.username.present?
    "@#{u.username.gsub('_', '\\_')}"
  else
    "–ë–µ–∑ –∏–º–µ–Ω–∏"
  end
end

def collect_daily_bonus(user, bot, telegram_id)
  if user.telegram_id == telegram_id
    daily_bonus = user.daily_bonus || user.create_daily_bonus(bonus_day: 0)

    now = Time.current

    if daily_bonus.last_collected_at&.to_date == now.to_date
      bot.api.send_message(chat_id: CHAT_ID, text: "üìÖ –í—ã —É–∂–µ —Å–æ–±—Ä–∞–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!")
      return
    end

    if daily_bonus.last_collected_at && daily_bonus.last_collected_at.to_date < now.to_date - 1
      daily_bonus.bonus_day = 0 # —Å–±—Ä–æ—Å –µ—Å–ª–∏ –¥–µ–Ω—å –ø—Ä–æ–ø—É—â–µ–Ω
    end

    daily_bonus.bonus_day += 1
    daily_bonus.last_collected_at = now

    reward = daily_bonus.bonus_day * 10
    user.balance += reward

    daily_bonus.save!
    user.save!

    if daily_bonus.bonus_day > 10
      daily_bonus.bonus_day = 1
    else
      bot.api.send_message(chat_id: CHAT_ID, text: "‚úÖ –î–µ–Ω—å #{daily_bonus.bonus_day} ‚Äî –≤—ã –ø–æ–ª—É—á–∏–ª–∏ #{reward} –æ—á–∫–æ–≤!")
    end
  end
end

Telegram::Bot::Client.run(TOKEN) do |bot|
  puts "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω..."


  bot.listen do |update|
    begin
      user = find_or_update_user(update)
  
      case update
      when Telegram::Bot::Types::Message
        text = update.text
  
        case text
        when '/start'
          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          bot.api.send_message(chat_id: user.telegram_id, text: "‘≤’°÷Ä÷á #{safe_telegram_name(user)}! ‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø ’¢’∏’ø÷â")
        when /^\/start (\d+)$/  # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ ID
          referrer_id = $1.to_i   # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        
          # –õ–æ–≥–∏—Ä—É–µ–º ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
          puts "ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: #{referrer_id}"
        
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ—Ñ–µ—Ä–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          referrer = User.find_by(telegram_id: referrer_id)
        
          if referrer.nil?
            puts "–†–µ—Ñ–µ—Ä–µ—Ä —Å ID #{referrer_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            bot.api.send_message(chat_id: user.telegram_id, text: "–†–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
          else
            puts "–†–µ—Ñ–µ—Ä–µ—Ä —Å ID #{referrer_id} –Ω–∞–π–¥–µ–Ω! –ò–º—è: #{safe_telegram_name(referrer)}"
          end
        
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–≥–ª–∞—à–∞—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (referral) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if user.nil?
            puts "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{user.telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            bot.api.send_message(chat_id: user.telegram_id, text: "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
          end
        
          puts "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID #{user.telegram_id} –Ω–∞–π–¥–µ–Ω! –ò–º—è: #{safe_telegram_name(user)}"
        
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º
          if referrer_id != user.telegram_id && !Referral.exists?(referral_id: user.id)
            # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º –∏ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            referral = Referral.new(referrer_id: referrer.telegram_id, referral_id: user.telegram_id)
        
            # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤—è–∑–∏
            puts "–°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º —Å ID #{referrer.telegram_id} –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º —Å ID #{user.telegram_id}"
        
            if referral.save
              # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
              referrer.increment!(:balance, 10)
        
              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
              bot.api.send_message(chat_id: referrer.telegram_id, text: "üéâ #{safe_telegram_name(user)} –≤—Å—Ç—É–ø–∏–ª –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ! +10 –æ—á–∫–æ–≤!")
        
              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
              bot.api.send_message(chat_id: user.telegram_id, text: "‘≤’°÷Ä÷á #{safe_telegram_name(user)}! ‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø ’¢’∏’ø÷â")
            else
              # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤—è–∑–∏
              puts "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: #{referral.errors.full_messages.join(', ')}"
              bot.api.send_message(chat_id: user.telegram_id, text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
            end
          else
            puts "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{user.telegram_id} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω –∏–ª–∏ —É–∂–µ –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω."
          end
        
        when '/profile'
          bonus_day = user.daily_bonus&.bonus_day.to_i
          bonus_day = 0 if bonus_day > 10
          days_left = 10 - bonus_day
  
          link = user.referral_link
          progress = "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + ("üü©" * bonus_day) + ("‚¨ú" * (10 - bonus_day))
  
          user_info = <<~TEXT
            –ò–º—è: #{safe_telegram_name(update.from)}
            –ë–∞–ª–∞–Ω—Å: #{user.balance}$
            –†–æ–ª—å: #{user.role}
            üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: #{link}
            üìÖ –ë–æ–Ω—É—Å: –î–µ–Ω—å #{bonus_day} –∏–∑ 10
            #{progress}
          TEXT
  
          buttons = [
            [Telegram::Bot::Types::InlineKeyboardButton.new(text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data: "deposit")],
            [Telegram::Bot::Types::InlineKeyboardButton.new(text: "–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å", callback_data: "daily_bonus_#{user.telegram_id}")]
          ]
  
          bot.api.send_message(
            chat_id: CHAT_ID,
            text: user_info,
            reply_markup: Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: buttons)
          )
        end
  
      when Telegram::Bot::Types::CallbackQuery
        data = update.data
  
        case data
        when /^daily_bonus_/
          telegram_id = data.split('_').last.to_i
          collect_daily_bonus(user, bot, telegram_id)
        end
      else
        puts "‚ùî –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø update: #{update.class}"
      end
  
    rescue StandardError => e
      puts "üî• –û—à–∏–±–∫–∞: #{e.message}"
    end
  end
end